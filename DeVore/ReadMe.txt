 This folder includes Matlab implementation of the binary DeVore measurement matrix, which is first proposed in [1]. The summarized explanation of DeVore matrix is found in our paper in [2]. There are three Matlab files in the folder:1) Devore_Exp.m : This file receives a prime number q and the dimensionality of the unknown vector n as inputs. It must be noted that in DeVore construction, the dimensionality of the matrix is q^2*n and n<=q^3. (q is a prime number)The output of this function is a q*n matrix which only keeps the indices of ones and helps reducing the memory needed to store the matrix. In DeVore matrix, each column has q blocks and in each block we have exactly one 1. So the B matrix keeps the indices 0:q-1 of the ones in each column of the measurement matrix. In [2], we have proposed a non-iterative recovery algorithm based on binary matrices which is super-fast compared to basis pursuit. In the non-iterative recovery algorithm, we do not need to have the actual matrix A thus we can use the sparse representation of this matrix, which is B.2) Exp_mult.m : This file computes the measurement vector y=Ax by only having the indices matrix B. So the inputs are B and x (unknown vector) and the output contains the sample values in the noise-free case.3) B_to_A.m : This file gives us the actual measurement matrix A by using the index matrix B. In some applications, we might need to have the actual matrix A instead of the sparse representation of it (B).-If you have any questions, feel free to contact the author by the following email:mafilot@gmail.com-If you use our code in your research, please support us by citing our paper in [2].***********References**********[1] Deterministic Constructions of Compressed Sensing Matrices, Ronald A. DeVore, Journal of Complexity, Vol. 23, pp. 918-925, 2007.[2] A Fast Non-iterative Algorithm for Compressive Sensing Using Binary Measurement Matrices, Mahsa Lotfi and Mathukumalli Vidyasagar, IEEE Transactions on Signal Processing, Vol. 66(15), pp. 4079-4089, 2018.